@model Glamboyant.Models.HairServiceModels.HairServiceCreate

@{
    ViewBag.Title = "Create";
}

<h2 style="margin-top: 60px;
        text-align:center;
        color: hotpink;
        font-family: 'Megrim', cursive;
        font-weight:600;">
    CREATE SERVICE
</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.ServiceType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(o => o.ServiceType, Enum.GetValues(typeof(Glamboyant.Data.ServiceType)).Cast<Glamboyant.Data.ServiceType>().Select(x => new SelectListItem { Text = x.ToString(), Value = ((int)x).ToString() }))
            @Html.ValidationMessageFor(model => model.ServiceType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" style="background-color: hotpink !important; color: white !important;" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { style = "color:hotpink" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
